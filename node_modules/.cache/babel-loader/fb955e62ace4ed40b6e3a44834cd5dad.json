{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\n\nconst useValidation = (validateInputs, validateForm, setIsValid) => {\n  _s();\n\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState([]);\n  const [submit, setSubmit] = useState(false);\n\n  const handleBlur = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n    setErrors(validateInputs(name, value, errors));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validateForm(values));\n    setSubmit(true);\n  };\n\n  useEffect(() => {\n    if (Object.values(errors).every(error => error === '') && submit) {\n      setIsValid(true);\n    } else {\n      setSubmit(false);\n    }\n  }, [errors, setIsValid, submit]);\n  return {\n    handleBlur,\n    errors,\n    handleSubmit,\n    values\n  };\n};\n\n_s(useValidation, \"rn54CF00DHRrdlbx04E9cu29GFM=\");\n\nexport default useValidation;","map":{"version":3,"sources":["C:/Users/jaya situmorang/Pictures/Star-Wars-main/starwars_by_jaya/src/hooks/useValidation/index.js"],"names":["useEffect","useState","useValidation","validateInputs","validateForm","setIsValid","values","setValues","errors","setErrors","submit","setSubmit","handleBlur","e","name","value","target","handleSubmit","preventDefault","Object","every","error"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,aAAa,GAAG,CAACC,cAAD,EAAiBC,YAAjB,EAA+BC,UAA/B,KAA8C;AAAA;;AAClE,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMW,UAAU,GAAGC,CAAC,IAAI;AACtB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAT,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACQ,IAAD,GAAQC;AAFA,KAAD,CAAT;AAIAN,IAAAA,SAAS,CAACN,cAAc,CAACW,IAAD,EAAOC,KAAP,EAAcP,MAAd,CAAf,CAAT;AACD,GAPD;;AASA,QAAMS,YAAY,GAAGJ,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACK,cAAF;AACAT,IAAAA,SAAS,CAACL,YAAY,CAACE,MAAD,CAAb,CAAT;AACAK,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAJD;;AAMAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,MAAM,CAACb,MAAP,CAAcE,MAAd,EAAsBY,KAAtB,CAA4BC,KAAK,IAAIA,KAAK,KAAK,EAA/C,KAAsDX,MAA1D,EAAkE;AAChEL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAFD,MAEO;AACLM,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,GANQ,EAMN,CAACH,MAAD,EAASH,UAAT,EAAqBK,MAArB,CANM,CAAT;AAQA,SAAO;AAAEE,IAAAA,UAAF;AAAcJ,IAAAA,MAAd;AAAsBS,IAAAA,YAAtB;AAAoCX,IAAAA;AAApC,GAAP;AACD,CA7BD;;GAAMJ,a;;AA+BN,eAAeA,aAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst useValidation = (validateInputs, validateForm, setIsValid) => {\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState([]);\n  const [submit, setSubmit] = useState(false)\n\n  const handleBlur = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n    setErrors(validateInputs(name, value, errors));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validateForm(values));\n    setSubmit(true)\n  };\n\n  useEffect(() => {\n    if (Object.values(errors).every(error => error === '') && submit) {\n      setIsValid(true)\n    } else {\n      setSubmit(false)\n    }\n  }, [errors, setIsValid, submit])\n\n  return { handleBlur, errors, handleSubmit, values }\n};\n\nexport default useValidation;"]},"metadata":{},"sourceType":"module"}